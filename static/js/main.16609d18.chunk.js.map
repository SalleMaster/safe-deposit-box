{"version":3,"sources":["components/safe/screen/Screen.js","hooks/useIdle.js","hooks/useShortenText.js","components/safe/keypad/Keypad.js","constants/safeConstants.js","hooks/useInput.js","actions/safeActions.js","components/safe/Safe.js","App.js","reportWebVitals.js","reducers/safeReducers.js","store.js","index.js"],"names":["Screen","password","text","idleAfter","useState","idle","setIdle","safe","useSelector","state","locked","status","useEffect","timeout","setTimeout","clearTimeout","useIdle","shortPassword","maxCharLength","shortText","setShortText","length","slice","useShortenText","className","Keypad","onClickHandler","keys","map","key","index","value","onClick","e","SAFE_SET_LOCK_REQUEST","SAFE_SET_LOCK_SUCCESS","SAFE_SET_LOCK_FAIL","SAFE_SET_LOCK_RESET","SAFE_UNLOCK_REQUEST","SAFE_UNLOCK_SUCCESS","SAFE_UNLOCK_FAIL","SAFE_UNLOCK_RESET","SAFE_SERVICE_MODE_ENABLE","SAFE_KEYPAD_LOCKED","SAFE_KEYPAD_UNLOCKED","SAFE_VALIDATE_CODE_REQUEST","SAFE_VALIDATE_CODE_SUCCESS","SAFE_VALIDATE_CODE_FAIL","SAFE_VALIDATE_CODE_RESET","useInput","setText","dispatch","useDispatch","serviceMode","keypadLocked","enterKey","join","a","type","Error","payload","message","keyboardCallback","includes","document","addEventListener","removeEventListener","code","getState","safePassword","fetch","res","json","sn","safeSerialNumber","serialNumber","target","Safe","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"wNAiCeA,EA3BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECFV,SAACC,EAAMC,GAAe,IAAD,EAClBC,oBAAS,GADS,mBACnCC,EADmC,KAC7BC,EAD6B,KAGpCC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAClCG,EAAmBH,EAAnBG,OAAQC,EAAWJ,EAAXI,OAYhB,OAVAC,qBAAU,WACRN,GAAQ,GAER,IAAMO,EAAUC,YAAW,WACzBR,GAAQ,KACPH,GAEH,OAAO,kBAAMY,aAAaF,MACzB,CAACX,EAAMQ,EAAQC,EAAQR,IAEnB,CACLE,OACAK,SACAC,UDT+BK,CAAQf,EAHvB,KAGVI,EARuB,EAQvBA,KAAMK,EARiB,EAQjBA,OAAQC,EARS,EAQTA,OAGHM,EEdS,SAACf,EAAMgB,GAAmB,IAAD,EACnBd,mBAAS,IADU,mBAC9Ce,EAD8C,KACnCC,EADmC,KASrD,OANAR,qBAAU,WACJV,EAAKmB,OAASH,GAChBE,EAAa,MAAD,OAAOlB,EAAKoB,OAAOJ,OAEhC,CAAChB,EAAMgB,IAEH,CACLC,aFImCI,CAAetB,EAT9B,IASdkB,UAER,OACE,sBAAKK,UAAWnB,EAAO,SAAW,oBAAlC,UACE,qBAAKmB,UAAU,gBAAf,SAAgCd,EAAS,SAAW,aACpD,qBAAKc,UAAU,kBAAf,SACGvB,EAASoB,OAfM,GAgBZJ,EACAhB,EAASoB,OAAS,EAClBpB,EACAU,QGRGc,EAjBA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,KAChC,OACE,qBAAKH,UAAU,SAAf,SACGG,EAAKC,KAAI,SAACC,EAAKC,GAAN,OACR,wBACEN,UAAU,cACVO,MAAOF,EAEPG,QAAS,SAACC,GAAD,OAAOP,EAAeO,IAJjC,SAMGJ,GAHIC,S,+BCTFI,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAsB,sBAEtBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAoB,oBAEpBC,EAA2B,2BAG3BC,EAAqB,qBACrBC,EAAuB,uBAEvBC,EAA6B,6BAC7BC,EAA6B,6BAC7BC,EAA0B,0BAC1BC,EAA2B,2BCP3BC,EAAW,SAACtB,GAAU,IAAD,EACRvB,mBAAS,IADD,mBACzBF,EADyB,KACnBgD,EADmB,KAE1BC,EAAWC,cAGX7C,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAClCG,EAAsCH,EAAtCG,OAAQ2C,EAA8B9C,EAA9B8C,YAAaC,EAAiB/C,EAAjB+C,aAGvBC,EAAW,SAAC1B,GCFG,IAAC5B,EDGpB,IAAIqD,EAEG,GAAID,EACTH,EAAQ,sBAAIhD,GAAJ,CAAU2B,IAAK2B,KAAK,UACvB,GAAY,MAAR3B,GAAgBnB,EAGpB,CACL,GAAY,MAARmB,EACF,OAEFqB,EAAQ,sBAAIhD,GAAJ,CAAU2B,IAAK2B,KAAK,UAN5BL,GCRkBlD,EDQDC,ECRA,uCAAc,WAAOiD,GAAP,SAAAM,EAAA,kEAEjCN,EAAS,CAAEO,KAAMf,IACjBQ,EAAS,CAAEO,KAAMxB,IAGZjC,GAAgC,IAApBA,EAASoB,QAA6B,WAAbpB,EANT,sBAOzB,IAAI0D,MAAM,SAPe,OAWjC7C,YAAW,WACTqC,EAAS,CAAEO,KAAMvB,EAAuByB,QAAS3D,IACjDkD,EAAS,CAAEO,KAAMd,MAChB,KAd8B,gDAiBjCO,EAAS,CAAEO,KAAMtB,EAAoBwB,QAAS,KAAMC,UAGpD/C,YAAW,WACTqC,EAAS,CAAEO,KAAMrB,IACjBc,EAAS,CAAEO,KAAMd,MAChB,KAvB8B,yDAAd,wDDSjBM,EAAQ,KAeNY,EAAmB,SAAC7B,GACxB,IAAIJ,EAAMI,EAAEJ,IACA,MAARA,IACFA,EAAM,KAEJF,EAAKoC,SAASlC,IAChB0B,EAAS1B,IAqCb,OAhCAjB,qBAAU,WAGR,OAFAoD,SAASC,iBAAiB,UAAWH,GAE9B,kBAAME,SAASE,oBAAoB,UAAWJ,OAIvDlD,qBAAU,WAEHyC,GACCnD,EAAKmB,OAAS,GAChB6B,EAAQhD,EAAKoB,MAAMpB,EAAKmB,OAAS,EAAGnB,EAAKmB,SAK7C,IAAMR,EAAUC,YAAW,WCYH,IAACqD,EAnCNlE,EDwBbS,GAAmB,WAATR,GACZgD,EAAQ,IACRC,ECIyB,uCAAM,WAAOA,GAAP,SAAAM,EAAA,sDACrCN,EAAS,CAAEO,KAAMhB,IADoB,2CAAN,wDDHA,IAAhBxC,EAAKmB,SAAiBgC,GAAe3C,GAC9CwC,EAAQ,IACRC,GC7BelD,ED6BCC,EC7BF,uCAAc,WAAOiD,EAAUiB,GAAjB,eAAAX,EAAA,kEAEhCN,EAAS,CAAEO,KAAMf,IACjBQ,EAAS,CAAEO,KAAMpB,IAGX+B,EAAeD,IAAW7D,KAAKN,SAGjCA,IAAaoE,EATe,sBAUxB,IAAIV,MAAM,SAVc,OAa9B7C,YAAW,WACTqC,EAAS,CAAEO,KAAMnB,MAChB,KAf2B,yDAmBhCY,EAAS,CAAEO,KAAMlB,EAAkBoB,QAAS,KAAMC,UAGlD/C,YAAW,WACTqC,EAAS,CAAEO,KAAMjB,IACjBU,EAAS,CAAEO,KAAMd,MAChB,KAzB6B,0DAAd,2DD8BW,IAAhB1C,EAAKmB,QAAgBgC,IAC9BH,EAAQ,IACRC,GCGqBgB,EDHCjE,ECGF,uCAAU,WAAOiD,EAAUiB,GAAjB,qBAAAX,EAAA,sEAElCN,EAAS,CAAEO,KAAMf,IACjBQ,EAAS,CAAEO,KAAMb,IAHiB,SAMhByB,MAAM,0FAAD,OACqEH,IAP1D,cAM5BI,EAN4B,gBAWbA,EAAIC,OAXS,mBAW1BC,EAX0B,EAW1BA,GAGFC,EAAmBN,IAAW7D,KAAKoE,aAGrCF,IAAOC,EAjBuB,uBAkB1B,IAAIf,MAAM,SAlBgB,QAoBhCR,EAAS,CAAEO,KAAMZ,IAGjBhC,YAAW,WACTqC,EAAS,CAAEO,KAAMnB,MAChB,KAzB6B,0DA6BlCY,EAAS,CAAEO,KAAMX,EAAyBa,QAAS,KAAMC,UAGzD/C,YAAW,WACTqC,EAAS,CAAEO,KAAMV,IACjBG,EAAS,CAAEO,KAAMd,MAChB,KAnC+B,0DAAV,6DDDrB,MAEH,OAAO,kBAAM7B,aAAaF,MACzB,CAACX,EAAMQ,EAAQyC,EAAUD,EAASG,IAE9B,CACL3B,eAjDqB,SAACO,GACtBsB,EAAStB,EAAE2C,OAAO7C,QAiDlBJ,OACAzB,SE5DW2E,EAnBF,WAEX,IAAMlD,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAI7DgD,EADKnE,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAClCoE,aANS,EAQ0B1B,EAAStB,GAA5CD,EARS,EAQTA,eAAsBzB,EARb,EAQOC,KAExB,OACE,sBAAKsB,UAAU,OAAf,UACE,cAAC,EAAD,CAAQvB,SAAUA,IAClB,cAAC,EAAD,CAAQyB,eAAgBA,EAAgBC,KAAMA,IAC9C,sBAAKH,UAAU,gBAAf,kBAAqCmD,SCf5BG,EAJH,WACV,OAAO,cAAC,EAAD,KCMMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8BCWRQ,EAAe,CACnB9E,QAAQ,EACRT,SAAU,GACVU,OAAQ,QACRgE,aAAc,WACdtB,aAAa,EACbC,cAAc,GChBVmC,EAAUC,0BAAgB,CAC9BnF,KDkByB,WAAmC,IAAlCE,EAAiC,uDAAzB+E,EAAcG,EAAW,uCAC3D,OAAQA,EAAOjC,MACb,KAAKxB,EACH,OAAO,2BAAKzB,GAAZ,IAAmBE,OAAQ,eAC7B,KAAKwB,EACH,OAAO,2BACF1B,GADL,IAEEC,QAAQ,EACRC,OAAQ,GACRV,SAAU0F,EAAO/B,UAErB,KAAKxB,EACH,OAAO,2BACF3B,GADL,IAEEE,OAAQgF,EAAO/B,UAEnB,KAAKvB,EACH,OAAOmD,EACT,KAAKlD,EACH,OAAO,2BACF7B,GADL,IAEEE,OAAQ,iBAEZ,KAAK4B,EACH,OAAOiD,EACT,KAAKhD,EACH,OAAO,2BACF/B,GADL,IAEEE,OAAQgF,EAAO/B,UAEnB,KAAKnB,EACH,OAAO,2BACFhC,GADL,IAEEE,OAAQ,KAEZ,KAAKgC,EACH,OAAO,2BACFlC,GADL,IAEE6C,cAAc,IAElB,KAAKV,EACH,OAAO,2BACFnC,GADL,IAEE6C,cAAc,IAElB,KAAKZ,EACH,OAAO,2BACFjC,GADL,IAEE4C,aAAa,EACb1C,OAAQ,YAEZ,KAAKkC,EACH,OAAO,2BACFpC,GADL,IAEEE,OAAQ,kBAEZ,KAAKmC,EACH,OAAO,2BACFrC,GADL,IAEEE,OAAQ,iBAEZ,KAAKoC,EACH,OAAO,2BACFtC,GADL,IAEEE,OAAQgF,EAAO/B,UAEnB,KAAKZ,EACH,OAAO,2BACFvC,GADL,IAEE4C,aAAa,EACb1C,OAAQ,KAEZ,QACE,OAAOF,MCxFPmF,EAAa,CAACC,KAOLC,EALDC,sBACZN,EACAO,8BAAoBC,kBAAe,WAAf,EAAmBL,KCTzCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ9B,SAASqC,eAAe,SAG1BtB,M","file":"static/js/main.16609d18.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// Custom hooks\r\nimport { useIdle } from '../../../hooks/useIdle';\r\nimport { useShortenText } from '../../../hooks/useShortenText';\r\n\r\nconst Screen = ({ password }) => {\r\n  // Max character length visible on screen\r\n  const maxCharLength = 11;\r\n\r\n  // Amount of time to wait before turning idle\r\n  const idleAfter = 5000;\r\n\r\n  // Control idle state of screen\r\n  const { idle, locked, status } = useIdle(password, idleAfter);\r\n\r\n  // Shorten text if it exceeds max char length\r\n  const { shortText: shortPassword } = useShortenText(password, maxCharLength);\r\n\r\n  return (\r\n    <div className={idle ? 'screen' : 'screen screen--on'}>\r\n      <div className='screen__state'>{locked ? 'Locked' : 'Unlocked'}</div>\r\n      <div className='screen__message'>\r\n        {password.length > maxCharLength\r\n          ? shortPassword\r\n          : password.length > 0\r\n          ? password\r\n          : status}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Screen;\r\n","import { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Control idle state\r\nexport const useIdle = (text, idleAfter) => {\r\n  const [idle, setIdle] = useState(false);\r\n\r\n  const safe = useSelector((state) => state.safe);\r\n  const { locked, status } = safe;\r\n\r\n  useEffect(() => {\r\n    setIdle(false);\r\n\r\n    const timeout = setTimeout(() => {\r\n      setIdle(true);\r\n    }, idleAfter);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [text, locked, status, idleAfter]);\r\n\r\n  return {\r\n    idle,\r\n    locked,\r\n    status,\r\n  };\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\n// Custom hook for slicing down text\r\nexport const useShortenText = (text, maxCharLength) => {\r\n  const [shortText, setShortText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (text.length > maxCharLength) {\r\n      setShortText(`...${text.slice(-maxCharLength)}`);\r\n    }\r\n  }, [text, maxCharLength]);\r\n\r\n  return {\r\n    shortText,\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nconst Keypad = ({ onClickHandler, keys }) => {\r\n  return (\r\n    <div className='keypad'>\r\n      {keys.map((key, index) => (\r\n        <button\r\n          className='keypad__btn'\r\n          value={key}\r\n          key={index}\r\n          onClick={(e) => onClickHandler(e)}\r\n        >\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keypad;\r\n","export const SAFE_SET_LOCK_REQUEST = 'SAFE_SET_LOCK_REQUEST';\r\nexport const SAFE_SET_LOCK_SUCCESS = 'SAFE_SET_LOCK_SUCCESS';\r\nexport const SAFE_SET_LOCK_FAIL = 'SAFE_SET_LOCK_FAIL';\r\nexport const SAFE_SET_LOCK_RESET = 'SAFE_SET_LOCK_RESET';\r\n\r\nexport const SAFE_UNLOCK_REQUEST = 'SAFE_UNLOCK_REQUEST';\r\nexport const SAFE_UNLOCK_SUCCESS = 'SAFE_UNLOCK_SUCCESS';\r\nexport const SAFE_UNLOCK_FAIL = 'SAFE_UNLOCK_FAIL';\r\nexport const SAFE_UNLOCK_RESET = 'SAFE_UNLOCK_RESET';\r\n\r\nexport const SAFE_SERVICE_MODE_ENABLE = 'SAFE_SERVICE_MODE_ENABLE';\r\nexport const SAFE_SERVICE_MODE_DISABLE = 'SAFE_SERVICE_MODE_DISABLE';\r\n\r\nexport const SAFE_KEYPAD_LOCKED = 'SAFE_KEYPAD_LOCKED';\r\nexport const SAFE_KEYPAD_UNLOCKED = 'SAFE_KEYPAD_UNLOCKED';\r\n\r\nexport const SAFE_VALIDATE_CODE_REQUEST = 'SAFE_VALIDATE_CODE_REQUEST';\r\nexport const SAFE_VALIDATE_CODE_SUCCESS = 'SAFE_VALIDATE_CODE_SUCCESS';\r\nexport const SAFE_VALIDATE_CODE_FAIL = 'SAFE_VALIDATE_CODE_FAIL';\r\nexport const SAFE_VALIDATE_CODE_RESET = 'SAFE_VALIDATE_CODE_RESET';\r\n","import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// Actions\r\nimport {\r\n  setLock,\r\n  unlock,\r\n  enableServiceMode,\r\n  validateCode,\r\n} from '../actions/safeActions';\r\n\r\n// Input logic hook\r\nexport const useInput = (keys) => {\r\n  const [text, setText] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  // Safe state\r\n  const safe = useSelector((state) => state.safe);\r\n  const { locked, serviceMode, keypadLocked } = safe;\r\n\r\n  // Key enter handler\r\n  const enterKey = (key) => {\r\n    if (keypadLocked) {\r\n      return;\r\n    } else if (serviceMode) {\r\n      setText([...text, key].join(''));\r\n    } else if (key === 'L' && !locked) {\r\n      dispatch(setLock(text));\r\n      setText([]);\r\n    } else {\r\n      if (key === 'L') {\r\n        return;\r\n      }\r\n      setText([...text, key].join(''));\r\n    }\r\n  };\r\n\r\n  // Button click handler\r\n  const onClickHandler = (e) => {\r\n    enterKey(e.target.value);\r\n  };\r\n\r\n  // Keyboard handler callback\r\n  const keyboardCallback = (e) => {\r\n    let key = e.key;\r\n    if (key === 'l') {\r\n      key = 'L';\r\n    }\r\n    if (keys.includes(key)) {\r\n      enterKey(key);\r\n    }\r\n  };\r\n\r\n  // Listen for keyboard input\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', keyboardCallback);\r\n\r\n    return () => document.removeEventListener('keydown', keyboardCallback);\r\n  });\r\n\r\n  // Handle input when in locked or service state\r\n  useEffect(() => {\r\n    // Shorten text to six characters when not in service mode\r\n    if (!serviceMode) {\r\n      if (text.length > 6) {\r\n        setText(text.slice(text.length - 6, text.length));\r\n      }\r\n    }\r\n\r\n    // Handle input after 1.2s\r\n    const timeout = setTimeout(() => {\r\n      if (locked && text === '000000') {\r\n        setText([]);\r\n        dispatch(enableServiceMode());\r\n      } else if (text.length !== 0 && !serviceMode && locked) {\r\n        setText([]);\r\n        dispatch(unlock(text));\r\n      } else if (text.length !== 0 && serviceMode) {\r\n        setText([]);\r\n        dispatch(validateCode(text));\r\n      }\r\n    }, 1200);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [text, locked, dispatch, setText, serviceMode]);\r\n\r\n  return {\r\n    onClickHandler,\r\n    keys,\r\n    text,\r\n  };\r\n};\r\n","import {\r\n  SAFE_SET_LOCK_REQUEST,\r\n  SAFE_SET_LOCK_SUCCESS,\r\n  SAFE_SET_LOCK_FAIL,\r\n  SAFE_SET_LOCK_RESET,\r\n  SAFE_UNLOCK_REQUEST,\r\n  SAFE_UNLOCK_SUCCESS,\r\n  SAFE_UNLOCK_FAIL,\r\n  SAFE_UNLOCK_RESET,\r\n  SAFE_SERVICE_MODE_ENABLE,\r\n  SAFE_VALIDATE_CODE_REQUEST,\r\n  SAFE_KEYPAD_UNLOCKED,\r\n  SAFE_KEYPAD_LOCKED,\r\n  SAFE_VALIDATE_CODE_SUCCESS,\r\n  SAFE_VALIDATE_CODE_FAIL,\r\n  SAFE_VALIDATE_CODE_RESET,\r\n} from '../constants/safeConstants';\r\n\r\n// Set lock action\r\nexport const setLock = (password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: SAFE_KEYPAD_LOCKED });\r\n    dispatch({ type: SAFE_SET_LOCK_REQUEST });\r\n\r\n    // Password must be six characters long and can not be all zeroes\r\n    if (!password || password.length !== 6 || password === '000000') {\r\n      throw new Error('Error');\r\n    }\r\n\r\n    // Locking safe lasts 3s\r\n    setTimeout(() => {\r\n      dispatch({ type: SAFE_SET_LOCK_SUCCESS, payload: password });\r\n      dispatch({ type: SAFE_KEYPAD_UNLOCKED });\r\n    }, 3000);\r\n  } catch (error) {\r\n    // Display error\r\n    dispatch({ type: SAFE_SET_LOCK_FAIL, payload: error.message });\r\n\r\n    // Reset safe, and remove error after 2s\r\n    setTimeout(() => {\r\n      dispatch({ type: SAFE_SET_LOCK_RESET });\r\n      dispatch({ type: SAFE_KEYPAD_UNLOCKED });\r\n    }, 2000);\r\n  }\r\n};\r\n\r\n// Unlock safe action\r\nexport const unlock = (password) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: SAFE_KEYPAD_LOCKED });\r\n    dispatch({ type: SAFE_UNLOCK_REQUEST });\r\n\r\n    // Current safe password\r\n    const safePassword = getState().safe.password;\r\n\r\n    // Passwords must match\r\n    if (password !== safePassword) {\r\n      throw new Error('Error');\r\n    } else {\r\n      // Unlocking safe lasts 3s\r\n      setTimeout(() => {\r\n        dispatch({ type: SAFE_UNLOCK_SUCCESS });\r\n      }, 3000);\r\n    }\r\n  } catch (error) {\r\n    // Display error\r\n    dispatch({ type: SAFE_UNLOCK_FAIL, payload: error.message });\r\n\r\n    // Reset safe to locked state, and remove error after 2s\r\n    setTimeout(() => {\r\n      dispatch({ type: SAFE_UNLOCK_RESET });\r\n      dispatch({ type: SAFE_KEYPAD_UNLOCKED });\r\n    }, 2000);\r\n  }\r\n};\r\n\r\n// Service mode action\r\nexport const enableServiceMode = () => async (dispatch) => {\r\n  dispatch({ type: SAFE_SERVICE_MODE_ENABLE });\r\n};\r\n\r\n// Validate code action\r\nexport const validateCode = (code) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: SAFE_KEYPAD_LOCKED });\r\n    dispatch({ type: SAFE_VALIDATE_CODE_REQUEST });\r\n\r\n    // Send validation code to an API\r\n    const res = await fetch(\r\n      `https://9w4qucosgf.execute-api.eu-central-1.amazonaws.com/default/CR-JS_team_M02a?code=${code}`\r\n    );\r\n\r\n    // Extract serial number from response\r\n    const { sn } = await res.json();\r\n\r\n    // Our safe serial number\r\n    const safeSerialNumber = getState().safe.serialNumber;\r\n\r\n    // Response serial number and our safe serial number must match\r\n    if (sn !== safeSerialNumber) {\r\n      throw new Error('Error');\r\n    } else {\r\n      dispatch({ type: SAFE_VALIDATE_CODE_SUCCESS });\r\n\r\n      // Unlocking lasts 3s\r\n      setTimeout(() => {\r\n        dispatch({ type: SAFE_UNLOCK_SUCCESS });\r\n      }, 3000);\r\n    }\r\n  } catch (error) {\r\n    // Display error\r\n    dispatch({ type: SAFE_VALIDATE_CODE_FAIL, payload: error.message });\r\n\r\n    // Reset safe to locked state, and remove error after 2s\r\n    setTimeout(() => {\r\n      dispatch({ type: SAFE_VALIDATE_CODE_RESET });\r\n      dispatch({ type: SAFE_KEYPAD_UNLOCKED });\r\n    }, 2000);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Components\r\nimport Screen from './screen/Screen';\r\nimport Keypad from './keypad/Keypad';\r\n\r\n// Custom hook for input logic\r\nimport { useInput } from '../../hooks/useInput';\r\n\r\nconst Safe = () => {\r\n  // Keys we can use to interact with safe\r\n  const keys = ['7', '8', '9', '4', '5', '6', '1', '2', '3', '*', '0', 'L'];\r\n\r\n  // Safe state\r\n  const safe = useSelector((state) => state.safe);\r\n  const { serialNumber } = safe;\r\n\r\n  const { onClickHandler, text: password } = useInput(keys);\r\n\r\n  return (\r\n    <div className='safe'>\r\n      <Screen password={password} />\r\n      <Keypad onClickHandler={onClickHandler} keys={keys} />\r\n      <div className='serial-number'>S/N: {serialNumber}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Safe;\r\n","import './App.css';\n\n// Components\nimport Safe from './components/safe/Safe';\n\nconst App = () => {\n  return <Safe />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  SAFE_SET_LOCK_REQUEST,\r\n  SAFE_SET_LOCK_SUCCESS,\r\n  SAFE_SET_LOCK_FAIL,\r\n  SAFE_SET_LOCK_RESET,\r\n  SAFE_UNLOCK_REQUEST,\r\n  SAFE_UNLOCK_SUCCESS,\r\n  SAFE_UNLOCK_FAIL,\r\n  SAFE_UNLOCK_RESET,\r\n  SAFE_SERVICE_MODE_ENABLE,\r\n  SAFE_VALIDATE_CODE_REQUEST,\r\n  SAFE_VALIDATE_CODE_SUCCESS,\r\n  SAFE_VALIDATE_CODE_FAIL,\r\n  SAFE_KEYPAD_LOCKED,\r\n  SAFE_KEYPAD_UNLOCKED,\r\n  SAFE_VALIDATE_CODE_RESET,\r\n} from '../constants/safeConstants';\r\n\r\nconst initialState = {\r\n  locked: false,\r\n  password: '',\r\n  status: 'Ready',\r\n  serialNumber: 4815162342,\r\n  serviceMode: false,\r\n  keypadLocked: false,\r\n};\r\n\r\nexport const safeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SAFE_SET_LOCK_REQUEST:\r\n      return { ...state, status: 'Locking...' };\r\n    case SAFE_SET_LOCK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        locked: true,\r\n        status: '',\r\n        password: action.payload,\r\n      };\r\n    case SAFE_SET_LOCK_FAIL:\r\n      return {\r\n        ...state,\r\n        status: action.payload,\r\n      };\r\n    case SAFE_SET_LOCK_RESET:\r\n      return initialState;\r\n    case SAFE_UNLOCK_REQUEST:\r\n      return {\r\n        ...state,\r\n        status: 'Unlocking...',\r\n      };\r\n    case SAFE_UNLOCK_SUCCESS:\r\n      return initialState;\r\n    case SAFE_UNLOCK_FAIL:\r\n      return {\r\n        ...state,\r\n        status: action.payload,\r\n      };\r\n    case SAFE_UNLOCK_RESET:\r\n      return {\r\n        ...state,\r\n        status: '',\r\n      };\r\n    case SAFE_KEYPAD_LOCKED:\r\n      return {\r\n        ...state,\r\n        keypadLocked: true,\r\n      };\r\n    case SAFE_KEYPAD_UNLOCKED:\r\n      return {\r\n        ...state,\r\n        keypadLocked: false,\r\n      };\r\n    case SAFE_SERVICE_MODE_ENABLE:\r\n      return {\r\n        ...state,\r\n        serviceMode: true,\r\n        status: 'Service',\r\n      };\r\n    case SAFE_VALIDATE_CODE_REQUEST:\r\n      return {\r\n        ...state,\r\n        status: 'Validating...',\r\n      };\r\n    case SAFE_VALIDATE_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        status: 'Unlocking...',\r\n      };\r\n    case SAFE_VALIDATE_CODE_FAIL:\r\n      return {\r\n        ...state,\r\n        status: action.payload,\r\n      };\r\n    case SAFE_VALIDATE_CODE_RESET:\r\n      return {\r\n        ...state,\r\n        serviceMode: false,\r\n        status: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// Reducers\r\nimport { safeReducer } from './reducers/safeReducers';\r\n\r\n// Combine reducers in case we have more of them in the future\r\nconst reducer = combineReducers({\r\n  safe: safeReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}